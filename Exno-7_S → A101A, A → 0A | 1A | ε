#include <stdio.h>
#include <string.h>
#include <stdbool.h>

bool checkA(const char *str, int *pos);
bool checkS(const char *str, int *pos);

bool belongsToCFG(const char *str) {
    int pos = 0;
    int length = strlen(str);
    
    // Check if the string matches the grammar
    bool valid = checkS(str, &pos);
    
    // Ensure we've consumed the entire string
    return valid && (pos == length);
}

bool checkS(const char *str, int *pos) {
    int length = strlen(str);
    int initial_pos = *pos;
    
    // S → A101A
    // First check for A
    if (!checkA(str, pos)) {
        return false;
    }
    
    // Then check for "101"
    if (*pos + 2 >= length || 
        str[*pos] != '1' || 
        str[*pos+1] != '0' || 
        str[*pos+2] != '1') {
        *pos = initial_pos;
        return false;
    }
    *pos += 3;
    
    // Finally check for A again
    return checkA(str, pos);
}

bool checkA(const char *str, int *pos) {
    int length = strlen(str);
    
    // A → 0A | 1A | ε
    while (*pos < length && (str[*pos] == '0' || str[*pos] == '1')) {
        (*pos)++;
    }
    return true;
}

int main() {
    char input[100];
    
    printf("Enter a string to check (only 0s and 1s): ");
    scanf("%s", input);
    
    // Verify the string contains only 0s and 1s
    for (int i = 0; input[i] != '\0'; i++) {
        if (input[i] != '0' && input[i] != '1') {
            printf("Invalid input: string must contain only 0s and 1s.\n");
            return 1;
        }
    }
    
    if (belongsToCFG(input)) {
        printf("The string \"%s\" belongs to the language defined by the CFG.\n", input);
    } else {
        printf("The string \"%s\" does NOT belong to the language defined by the CFG.\n", input);
    }
    
    return 0;
}
